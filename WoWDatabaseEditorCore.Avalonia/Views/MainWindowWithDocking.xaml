<controls:ExtendedWindow xmlns="https://github.com/avaloniaui"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:mvvm="http://prismlibrary.com/"
          xmlns:utils="clr-namespace:WDE.Common.Avalonia.Utils;assembly=WDE.Common.Avalonia"
          xmlns:views="clr-namespace:WoWDatabaseEditorCore.Avalonia.Views"
          xmlns:controls="clr-namespace:AvaloniaStyles.Controls;assembly=AvaloniaStyles"
          xmlns:idc="clr-namespace:Dock.Avalonia.Controls;assembly=Dock.Avalonia"
          xmlns:docking="clr-namespace:WoWDatabaseEditorCore.Avalonia.Docking"
          xmlns:converters="clr-namespace:WDE.Common.Avalonia.Converters;assembly=WDE.Common.Avalonia"
          xmlns:components="clr-namespace:WDE.Common.Avalonia.Components;assembly=WDE.Common.Avalonia"
          xmlns:types="clr-namespace:WDE.Common.Types;assembly=WDE.Common"
          xmlns:quickAccess="clr-namespace:WoWDatabaseEditorCore.Avalonia.Services.QuickAccess"
          xmlns:viewModels="clr-namespace:WoWDatabaseEditorCore.ViewModels;assembly=WoWDatabaseEditorCore"
          mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
          mvvm:ViewModelLocator.AutoWireViewModel="True"
          x:Class="WoWDatabaseEditorCore.Avalonia.Views.MainWindowWithDocking"
          TransparencyLevelHint="AcrylicBlur"
          Icon="../Icon.png"
          ManagedIcon="../Icon.png"
          Name="Root"
          SubTitle="{Binding Subtitle}"
          Classes="MainWindow"
          x:DataType="viewModels:MainWindowViewModel"
          utils:MenuBind.MenuItemsGestures="{Binding MenuItemProviders}"
          Title="{Binding Title}">

    <controls:ExtendedWindow.Resources>
        <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
    </controls:ExtendedWindow.Resources>
    
    <NativeMenu.Menu>
        <NativeMenu utils:MenuBind.MenuItems="{Binding MenuItemProviders}">
        </NativeMenu>
    </NativeMenu.Menu>
    
    <controls:ExtendedWindow.ToolBar>
        <controls:ToolBar>
            <controls:ToolBar.LeftContent>
                <controls:ToolbarPanel>
                    <ToggleButton ToolTip.Tip="Show tables list" IsChecked="{CompiledBinding ShowTablesList, Mode=TwoWay}">
                        <WdeImage Classes.Checked="{CompiledBinding ShowTablesList}">
                            <WdeImage.Styles>
                                <Style Selector="WdeImage:not(.Checked)">
                                    <Setter Property="ImageUri" Value="Icons/icon_tables.png" />
                                </Style>
                                <Style Selector="WdeImage.Checked">
                                    <Setter Property="ImageUri" Value="Icons/icon_tables_white.png" />
                                </Style>
                            </WdeImage.Styles>
                        </WdeImage>
                    </ToggleButton>
                    
                    <components:ButtonImage Image="Icons/icon_play.png" IsVisible="{CompiledBinding ShowPlayButtons}" Command="{CompiledBinding ExecuteChangedCommand}" />
                    <components:ButtonImage Command="{CompiledBinding GenerateCurrentSqlCommand}"
                                            IsVisible="{CompiledBinding ShowExportButtons}"
                                            Text="To SQL" 
                                            Image="Icons/icon_to_sql.png" />
                    <components:ButtonImage Command="{CompiledBinding CopyCurrentSqlCommand}"
                                            IsVisible="{CompiledBinding ShowExportButtons}"
                                            ToolTip.Tip="Copy SQL" 
                                            Image="Icons/icon_copy_sql.png" />
                </controls:ToolbarPanel>
            </controls:ToolBar.LeftContent>
            <controls:ToolBar.MiddleContent>
                <ContentPresenter DataContext="{CompiledBinding DocumentManager.ActiveDocument}" Content="{CompiledBinding}" ContentTemplate="{x:Static utils:ToolbarDataTemplate.Template}" />
            </controls:ToolBar.MiddleContent>
            <controls:ToolBar.RightContent>
                <ItemsPresenter Items="{CompiledBinding RelatedSolutionItems.List}">
                    <ItemsPresenter.ItemTemplate>
                        <DataTemplate DataType="viewModels:RelatedSolutionItemViewModel">
                            <Button Command="{CompiledBinding CreateCommand}"
                                    ToolTip.Tip="{CompiledBinding Name}">
                                <components:WdeImage Image="{CompiledBinding Icon}" />
                            </Button>
                        </DataTemplate>
                    </ItemsPresenter.ItemTemplate>
                    <ItemsPresenter.ItemsPanel>
                        <ItemsPanelTemplate>
                            <controls:ToolbarPanel />
                        </ItemsPanelTemplate>
                    </ItemsPresenter.ItemsPanel>
                </ItemsPresenter>
            </controls:ToolBar.RightContent>
        </controls:ToolBar>
    </controls:ExtendedWindow.ToolBar>
    
    <controls:ExtendedWindow.StatusBar>
        <controls:StatusBar>
            <views:StatusBarView DockPanel.Dock="Bottom" Height="30" DataContext="{CompiledBinding StatusBar}" />
        </controls:StatusBar>
    </controls:ExtendedWindow.StatusBar>
    
    <controls:ExtendedWindow.Overlay>
        <Panel>
            <views:TasksPanel DataContext="{CompiledBinding TasksViewModel}"
                              Margin="0,0,5,0"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Bottom"
                              ClipToBounds="False"
                              IsVisible="{CompiledBinding IsPanelVisible, Mode=OneWay}" />
            <Panel Name="Panel" 
                   DataContext="{CompiledBinding QuickAccessViewModel, Mode=OneWay}"
                   IsVisible="{Binding IsOpened, Mode=OneWay}"
                   Background="Transparent">
                <quickAccess:QuickAccessView 
                    HorizontalAlignment="Center"
                    IsVisible="{Binding IsOpened, Mode=OneWay}"
                    Margin="0,200,0,0"
                    VerticalAlignment="Top"/>
                <Interaction.Behaviors>
                    <EventTriggerBehavior EventName="PointerPressed" SourceObject="{Binding #Panel}">
                        <InvokeCommandAction Command="{Binding CloseQuickAccessCommand}" />
                    </EventTriggerBehavior>
                </Interaction.Behaviors>
            </Panel>
        </Panel>
    </controls:ExtendedWindow.Overlay>

    <idc:DockControl Name="DockControl">
        <idc:DockControl.DataTemplates>
            <docking:PersistentDockDataTemplate />
        </idc:DockControl.DataTemplates>
        <idc:DockControl.Styles>
            <Style Selector="idc|DocumentControl">
                <Setter Property="HeaderTemplate">
                    <DataTemplate DataType="docking:AvaloniaDocumentDockWrapper">
                        <StackPanel Orientation="Horizontal">
                            <components:WdeImage Image="{CompiledBinding ViewModel.Icon, FallbackValue={x:Static views:MainWindowWithDocking.DocumentIcon}, TargetNullValue={x:Static views:MainWindowWithDocking.DocumentIcon}}" Width="16" Height="16"/>
                            <TextBlock Text="{CompiledBinding Title}" Padding="2">
                                <Interaction.Behaviors>
                                    <DataTriggerBehavior Binding="{CompiledBinding ViewModel.IsModified}" ComparisonCondition="Equal" Value="False">
                                        <ChangePropertyAction TargetObject="{Binding #TextBlock}" 
                                                              PropertyName="FontWeight"
                                                              Value="Normal" />
                                    </DataTriggerBehavior>
                                    <DataTriggerBehavior Binding="{CompiledBinding ViewModel.IsModified}" ComparisonCondition="Equal" Value="True">
                                        <ChangePropertyAction TargetObject="{Binding #TextBlock}" 
                                                              PropertyName="FontWeight"
                                                              Value="Bold" />
                                    </DataTriggerBehavior>
                                </Interaction.Behaviors>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </Setter>
            </Style>
            <Style Selector="idc|DocumentControl ContentControl#PART_ContentPresenter > ContentPresenter ContentPresenter.documentView">
                <Setter Property="IsVisible" Value="{Binding ViewModel.IsLoading, FallbackValue=true, Converter={StaticResource InverseBoolConverter}}" />
            </Style>
        </idc:DockControl.Styles>
    </idc:DockControl>
</controls:ExtendedWindow>
